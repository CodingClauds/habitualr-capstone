{"ast":null,"code":"var _jsxFileName = \"/Users/claudiomiranda/Desktop/claudio-miranda-capstone/habitualr-client/src/components/Calendar/Calendar.js\";\nimport React from \"react\";\nimport \"./Calendar.scss\";\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { INITIAL_EVENTS, createEventId } from \"./event-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Calendar extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      weekendsVisible: true,\n      currentEvents: [] // isHabitDone: false,\n\n    };\n\n    this.dateClick = function (info) {\n      // change the day's background color just for fun\n      console.log(info);\n      info.jsEvent.target.style.backgroundColor = \"lightgreen\";\n    };\n\n    this.handleEventClick = clickInfo => {\n      if (window.confirm // `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      ()) {\n        clickInfo.event.remove();\n      }\n    };\n\n    this.handleEvents = events => {\n      this.setState({\n        currentEvents: events\n      });\n    };\n  }\n\n  // toggleComplete = () => {\n  //   this.setState({\n  //     isHabitDone: !this.state.isHabitDone,\n  //   });\n  // };\n  //   onClick={this.toggleComplete}\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"demo-app\",\n      children: [this.renderSidebar(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-app-main\",\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          headerToolbar: {\n            left: \"prev,next today\",\n            center: \"title\",\n            right: \"dayGridMonth,timeGridWeek\"\n          },\n          initialView: \"dayGridMonth\",\n          editable: true,\n          selectable: true,\n          selectMirror: true,\n          dayMaxEvents: true,\n          weekends: this.state.weekendsVisible,\n          initialEvents: INITIAL_EVENTS // alternatively, use the `events` setting to fetch from a feed\n          // select={this.handleDateSelect}\n          ,\n          select: this.dateClick,\n          eventContent: renderEventContent // custom render function\n          ,\n          eventClick: this.dateClick,\n          eventsSet: this.handleEvents // called after events are initialized/added/changed/removed\n\n          /* you can update a remote database when these fire:\n          eventAdd={function(){}}\n          eventChange={function(){}}\n          eventRemove={function(){}}\n          */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderSidebar() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"demo-app-sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-app-sidebar-section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\nfunction renderSidebarEvent(event) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"b\", {\n      children: formatDate(event.start, {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, event.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","INITIAL_EVENTS","createEventId","Calendar","Component","state","weekendsVisible","currentEvents","dateClick","info","console","log","jsEvent","target","style","backgroundColor","handleEventClick","clickInfo","window","confirm","event","remove","handleEvents","events","setState","render","renderSidebar","left","center","right","renderEventContent","eventInfo","renderSidebarEvent","start","year","month","day","id"],"sources":["/Users/claudiomiranda/Desktop/claudio-miranda-capstone/habitualr-client/src/components/Calendar/Calendar.js"],"sourcesContent":["import React from \"react\";\nimport \"./Calendar.scss\";\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { INITIAL_EVENTS, createEventId } from \"./event-utils\";\n\nexport default class Calendar extends React.Component {\n  state = {\n    weekendsVisible: true,\n    currentEvents: [],\n    // isHabitDone: false,\n  };\n\n  // toggleComplete = () => {\n  //   this.setState({\n  //     isHabitDone: !this.state.isHabitDone,\n  //   });\n  // };\n\n  //   onClick={this.toggleComplete}\n\n  render() {\n    return (\n      <div className=\"demo-app\">\n        {this.renderSidebar()}\n        <div className=\"demo-app-main\">\n          <FullCalendar\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            headerToolbar={{\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"dayGridMonth,timeGridWeek\",\n            }}\n            initialView=\"dayGridMonth\"\n            editable={true}\n            selectable={true}\n            selectMirror={true}\n            dayMaxEvents={true}\n            weekends={this.state.weekendsVisible}\n            initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n            // select={this.handleDateSelect}\n            select={this.dateClick}\n            eventContent={renderEventContent} // custom render function\n            eventClick={this.dateClick}\n            eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n            /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderSidebar() {\n    return (\n      <div className=\"demo-app-sidebar\">\n        <div className=\"demo-app-sidebar-section\">\n          {/* <h2>Time to Track your Habit for this month!</h2> */}\n          {/* <ul>\n            <li>Select dates and you will be prompted to create a new event</li>\n            <li>Drag, drop, and resize events</li>\n            <li>Click an event to delete it</li>\n          </ul> */}\n        </div>\n        {/* <div className=\"demo-app-sidebar-section\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={this.state.weekendsVisible}\n              onChange={this.handleWeekendsToggle}\n            ></input>\n            toggle weekends\n          </label>\n        </div> */}\n        {/* <div className=\"demo-app-sidebar-section\">\n          <h2>All Events ({this.state.currentEvents.length})</h2>\n          <ul>{this.state.currentEvents.map(renderSidebarEvent)}</ul>\n        </div> */}\n      </div>\n    );\n  }\n  dateClick = function (info) {\n    // change the day's background color just for fun\n    console.log(info);\n    info.jsEvent.target.style.backgroundColor = \"lightgreen\";\n  };\n\n  //   handleWeekendsToggle = () => {\n  //     this.setState({\n  //       weekendsVisible: !this.state.weekendsVisible,\n  //     });\n  //   };\n\n  //   handleDateSelect = (selectInfo) => {\n  //     // let title = prompt(\"Please enter a new title for your event\");\n  //     let calendarApi = selectInfo.view.calendar;\n\n  //     calendarApi.unselect(); // clear date selection\n\n  //     if (title) {\n  //       calendarApi.addEvent({\n  //         id: createEventId(),\n  //         title,\n  //         start: selectInfo.startStr,\n  //         end: selectInfo.endStr,\n  //         allDay: selectInfo.allDay,\n  //       });\n  //     }\n  //   };\n\n  handleEventClick = (clickInfo) => {\n    if (\n      window\n        .confirm\n        // `Are you sure you want to delete the event '${clickInfo.event.title}'`\n        ()\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  handleEvents = (events) => {\n    this.setState({\n      currentEvents: events,\n    });\n  };\n}\n\nfunction renderEventContent(eventInfo) {\n  return (\n    <>\n      {/* <b>{eventInfo.timeText}</b>\n      <i>{eventInfo.event.title}</i> */}\n    </>\n  );\n}\n\nfunction renderSidebarEvent(event) {\n  return (\n    <li key={event.id}>\n      <b>\n        {formatDate(event.start, {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        })}\n      </b>\n      {/* <i>{event.title}</i> */}\n    </li>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,YAAP,IAAuBC,UAAvB,QAAyC,qBAAzC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,eAA9C;;;AAEA,eAAe,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;EAAA;IAAA;IAAA,KACpDC,KADoD,GAC5C;MACNC,eAAe,EAAE,IADX;MAENC,aAAa,EAAE,EAFT,CAGN;;IAHM,CAD4C;;IAAA,KA8EpDC,SA9EoD,GA8ExC,UAAUC,IAAV,EAAgB;MAC1B;MACAC,OAAO,CAACC,GAAR,CAAYF,IAAZ;MACAA,IAAI,CAACG,OAAL,CAAaC,MAAb,CAAoBC,KAApB,CAA0BC,eAA1B,GAA4C,YAA5C;IACD,CAlFmD;;IAAA,KA2GpDC,gBA3GoD,GA2GhCC,SAAD,IAAe;MAChC,IACEC,MAAM,CACHC,OADH,CAEE;MAFF,EADF,EAKE;QACAF,SAAS,CAACG,KAAV,CAAgBC,MAAhB;MACD;IACF,CApHmD;;IAAA,KAsHpDC,YAtHoD,GAsHpCC,MAAD,IAAY;MACzB,KAAKC,QAAL,CAAc;QACZjB,aAAa,EAAEgB;MADH,CAAd;IAGD,CA1HmD;EAAA;;EAOpD;EACA;EACA;EACA;EACA;EAEA;EAEAE,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,WACG,KAAKC,aAAL,EADH,eAEE;QAAK,SAAS,EAAC,eAAf;QAAA,uBACE,QAAC,YAAD;UACE,OAAO,EAAE,CAAC5B,aAAD,EAAgBC,cAAhB,EAAgCC,iBAAhC,CADX;UAEE,aAAa,EAAE;YACb2B,IAAI,EAAE,iBADO;YAEbC,MAAM,EAAE,OAFK;YAGbC,KAAK,EAAE;UAHM,CAFjB;UAOE,WAAW,EAAC,cAPd;UAQE,QAAQ,EAAE,IARZ;UASE,UAAU,EAAE,IATd;UAUE,YAAY,EAAE,IAVhB;UAWE,YAAY,EAAE,IAXhB;UAYE,QAAQ,EAAE,KAAKxB,KAAL,CAAWC,eAZvB;UAaE,aAAa,EAAEL,cAbjB,CAaiC;UAC/B;UAdF;UAeE,MAAM,EAAE,KAAKO,SAff;UAgBE,YAAY,EAAEsB,kBAhBhB,CAgBoC;UAhBpC;UAiBE,UAAU,EAAE,KAAKtB,SAjBnB;UAkBE,SAAS,EAAE,KAAKc,YAlBlB,CAkBgC;;UAC9B;AACZ;AACA;AACA;AACA;;QAvBU;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAgCD;;EAEDI,aAAa,GAAG;IACd,oBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EA0BD;;AA7EmD;;AA6HtD,SAASI,kBAAT,CAA4BC,SAA5B,EAAuC;EACrC,oBACE,qCADF;AAMD;;AAED,SAASC,kBAAT,CAA4BZ,KAA5B,EAAmC;EACjC,oBACE;IAAA,uBACE;MAAA,UACGvB,UAAU,CAACuB,KAAK,CAACa,KAAP,EAAc;QACvBC,IAAI,EAAE,SADiB;QAEvBC,KAAK,EAAE,OAFgB;QAGvBC,GAAG,EAAE;MAHkB,CAAd;IADb;MAAA;MAAA;MAAA;IAAA;EADF,GAAShB,KAAK,CAACiB,EAAf;IAAA;IAAA;IAAA;EAAA,QADF;AAYD"},"metadata":{},"sourceType":"module"}